spring:
  config:
    import: optional:file:.env[.properties]
  kafka:
    bootstrap-servers: ${KAFKA_URL}:${KAFKA_PORT}
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.notify.notificationconsumer.domain.dto.GroupMessage
  data:
    redis:
      host: ${REDIS_URL}
      port: ${REDIS_PORT}
      repositories:
        enabled: false

  datasource:
    url: jdbc:postgresql://${DB_URL}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

firebase:
  config-path: classpath:firebase-service-account.json

app:
  resend:
    check-delay-min: 30000 
    default-interval-min: 60 
    max-retention-days: 30  

  logging:
    level:
      org.springframework.kafka: DEBUG
      org.apache.kafka: INFO